//
//  HomeInteractor.swift
//  Git
//
//  Created by anunes on 02/03/20.
//  Copyright (c) 2020 Santander Tecnologia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func doInteractorGit(request: Home.Git.Request)
    func getFullName(index: Int)
}

protocol HomeDataStore {
    var fullName: String? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var fullName: String?
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var gitModel: Home.Git.Response?

    // MARK: Do Worker
    func doInteractorGit(request: Home.Git.Request) {
        worker = HomeWorker()
        worker?.doWorkGit(request: request, completion: { (result) in
            switch result {
            case .success(let response):
                self.gitModel = Home.Git.Response(gitModel: response)
                if let gitModel = self.gitModel {
                    self.presenter?.presentGit(response: gitModel )
                } else {
                    let error = Home.Git.GitError(erro: NSError(domain: "Erro no parse", code: 500, userInfo: nil))
                    self.presenter?.presentError(error: error)
                }
            case .failure(let response):
                let error = Home.Git.GitError(erro: response)
                self.presenter?.presentError(error: error)
            }
        })
    }

    func getFullName(index: Int) {
        fullName = gitModel?.gitModel.items[index].fullName
    }
}
